diff --git a/app/cells/projects/table_cell.rb b/app/cells/projects/table_cell.rb
index d8d6e8d62b..b68e732d58 100644
--- a/app/cells/projects/table_cell.rb
+++ b/app/cells/projects/table_cell.rb
@@ -96,12 +96,7 @@ module Projects
 
     def project_custom_fields
       @project_custom_fields ||= begin
-        fields =
-          if EnterpriseToken.allows_to?(:custom_fields_in_projects_list)
-            ProjectCustomField.visible(current_user).order(:position)
-          else
-            ProjectCustomField.none
-          end
+        fields = ProjectCustomField.visible(current_user).order(:position)
 
         fields
           .map { |cf| [:"cf_#{cf.id}", cf] }
diff --git a/app/controllers/attribute_help_texts_controller.rb b/app/controllers/attribute_help_texts_controller.rb
index b45bee54d7..e6fa085f4f 100644
--- a/app/controllers/attribute_help_texts_controller.rb
+++ b/app/controllers/attribute_help_texts_controller.rb
@@ -35,7 +35,6 @@ class AttributeHelpTextsController < ApplicationController
   before_action :require_admin
   before_action :find_entry, only: %i(edit update destroy)
   before_action :find_type_scope
-  before_action :require_enterprise_token_grant
 
   helper_method :gon
 
@@ -135,7 +134,4 @@ class AttributeHelpTextsController < ApplicationController
     @attribute_scope = AttributeHelpText.const_get(submodule)
   end
 
-  def require_enterprise_token_grant
-    render_404 unless EnterpriseToken.allows_to?(:attribute_help_texts)
-  end
 end
diff --git a/app/controllers/custom_actions_controller.rb b/app/controllers/custom_actions_controller.rb
index 2e51157d49..e0dd054bde 100644
--- a/app/controllers/custom_actions_controller.rb
+++ b/app/controllers/custom_actions_controller.rb
@@ -30,7 +30,6 @@
 
 class CustomActionsController < ApplicationController
   before_action :require_admin
-  before_action :require_enterprise_token
 
   self._model_object = CustomAction
   before_action :find_model_object, only: %i(edit update destroy)
@@ -86,21 +85,6 @@ class CustomActionsController < ApplicationController
     }
   end
 
-  def require_enterprise_token
-    return if EnterpriseToken.allows_to?(:custom_actions)
-
-    if request.get?
-      render template: 'common/upsale',
-             locals: {
-                 feature_title: I18n.t('custom_actions.upsale.title'),
-                 feature_description: I18n.t('custom_actions.upsale.description'),
-                 feature_reference: 'custom_actions_admin'
-             }
-    else
-      render_403
-    end
-  end
-
   # If no action/condition is set in the view, the
   # actions/conditions already existing on a custom action should be removed.
   # But because it is not feasible to have an empty and hidden hash object in a form
diff --git a/app/controllers/custom_fields_controller.rb b/app/controllers/custom_fields_controller.rb
index f76b869e6e..0267641574 100644
--- a/app/controllers/custom_fields_controller.rb
+++ b/app/controllers/custom_fields_controller.rb
@@ -118,9 +118,7 @@ class CustomFieldsController < ApplicationController
   def get_custom_field_params
     custom_field_params = permitted_params.custom_field
 
-    if !EnterpriseToken.allows_to?(:multiselect_custom_fields)
-      custom_field_params.delete :multi_value
-    end
+    custom_field_params.delete :multi_value
 
     custom_field_params
   end
diff --git a/app/controllers/custom_styles_controller.rb b/app/controllers/custom_styles_controller.rb
index 425f1cf0be..eed1d6c556 100644
--- a/app/controllers/custom_styles_controller.rb
+++ b/app/controllers/custom_styles_controller.rb
@@ -32,7 +32,6 @@ class CustomStylesController < ApplicationController
   menu_item :custom_style
 
   before_action :require_admin, except: [:logo_download, :favicon_download, :touch_icon_download]
-  before_action :require_ee_token, except: [:upsale, :logo_download, :favicon_download, :touch_icon_download]
   skip_before_action :check_if_login_required, only: [:logo_download, :favicon_download, :touch_icon_download]
 
   def show
@@ -132,12 +131,6 @@ class CustomStylesController < ApplicationController
     CustomStyle.current || CustomStyle.create!
   end
 
-  def require_ee_token
-    unless EnterpriseToken.allows_to?(:define_custom_style)
-      redirect_to custom_style_upsale_path
-    end
-  end
-
   def custom_style_params
     params.require(:custom_style).permit(:logo, :remove_logo, :favicon, :remove_favicon, :touch_icon, :remove_touch_icon)
   end
diff --git a/app/controllers/members_controller.rb b/app/controllers/members_controller.rb
index b88657dc5e..95d7f9fc14 100644
--- a/app/controllers/members_controller.rb
+++ b/app/controllers/members_controller.rb
@@ -221,7 +221,7 @@ class MembersController < ApplicationController
     user_ids.map do |id|
       if id.to_i == 0 && id.present? # we've got an email - invite that user
         # only admins can invite new users
-        if current_user.admin? && enterprise_allow_new_users?
+        if current_user.admin?
           # The invitation can pretty much only fail due to the user already
           # having been invited. So look them up if it does.
           user = UserInvitation.invite_new_user(email: id) ||
@@ -235,10 +235,6 @@ class MembersController < ApplicationController
     end.compact
   end
 
-  def enterprise_allow_new_users?
-    !OpenProject::Enterprise.user_limit_reached? || !OpenProject::Enterprise.fail_fast?
-  end
-
   def each_comma_seperated(array, &block)
     array.map { |e|
       if e.to_s.match /\d(,\d)*/
diff --git a/app/controllers/users_controller.rb b/app/controllers/users_controller.rb
index a79768f5b2..e7147a509b 100644
--- a/app/controllers/users_controller.rb
+++ b/app/controllers/users_controller.rb
@@ -159,13 +159,7 @@ class UsersController < ApplicationController
 
         if @user.invited?
           # setting a password for an invited user activates them implicitly
-          if OpenProject::Enterprise.user_limit_reached?
-            @user.register!
-            show_user_limit_warning!
-          else
-            @user.activate!
-          end
-
+          @user.activate!
           send_information = true
         end
 
diff --git a/app/helpers/application_helper.rb b/app/helpers/application_helper.rb
index a4d22e91cb..c9c42e3658 100644
--- a/app/helpers/application_helper.rb
+++ b/app/helpers/application_helper.rb
@@ -306,7 +306,8 @@ module ApplicationHelper
       css << 'action-' + params[:action]
     end
 
-    css << "ee-banners-#{EnterpriseToken.show_banners? ? 'visible' : 'hidden'}"
+    # Only until remove completely Enterprise banners
+    css << "ee-banners-hidden"
 
     # Add browser specific classes to aid css fixes
     css += browser_specific_classes
diff --git a/app/helpers/homescreen_helper.rb b/app/helpers/homescreen_helper.rb
index 056029feac..aae4adbedd 100644
--- a/app/helpers/homescreen_helper.rb
+++ b/app/helpers/homescreen_helper.rb
@@ -37,7 +37,7 @@ module HomescreenHelper
   ##
   # Homescreen organization icon
   def organization_icon
-    op_icon('icon-context icon-enterprise')
+    op_icon('icon-context')
   end
 
   ##
@@ -55,7 +55,7 @@ module HomescreenHelper
   ##
   # Determine whether we should render the links on homescreen?
   def show_homescreen_links?
-    EnterpriseToken.show_banners? || OpenProject::Configuration.show_community_links?
+    OpenProject::Configuration.show_community_links?
   end
 
   ##
diff --git a/app/helpers/projects_helper.rb b/app/helpers/projects_helper.rb
index 39bde1981b..35e52759ee 100644
--- a/app/helpers/projects_helper.rb
+++ b/app/helpers/projects_helper.rb
@@ -52,7 +52,7 @@ module ProjectsHelper
       Queries::Projects::Filters::NameAndIdentifierFilter,
       Queries::Projects::Filters::TypeFilter
     ]
-    whitelist << Queries::Filters::Shared::CustomFields::Base if EnterpriseToken.allows_to?(:custom_fields_in_projects_list)
+    whitelist << Queries::Filters::Shared::CustomFields::Base 
 
     whitelist.detect { |clazz| filter.is_a? clazz }
   end
diff --git a/app/helpers/search_helper.rb b/app/helpers/search_helper.rb
index ffb1eb975c..a8e00cd18b 100644
--- a/app/helpers/search_helper.rb
+++ b/app/helpers/search_helper.rb
@@ -123,7 +123,7 @@ module SearchHelper
   private
 
   def attachment_strings_for(attribute_name, event)
-    if EnterpriseToken.allows_to?(:attachment_filters) && OpenProject::Database.allows_tsv? && event.respond_to?(:attachments)
+    if OpenProject::Database.allows_tsv? && event.respond_to?(:attachments)
       event.attachments&.map(&attribute_name)&.join(' ')
     end
   end
diff --git a/app/helpers/security_badge_helper.rb b/app/helpers/security_badge_helper.rb
index bc04f6ecdc..125eea8066 100644
--- a/app/helpers/security_badge_helper.rb
+++ b/app/helpers/security_badge_helper.rb
@@ -36,7 +36,6 @@ module SecurityBadgeHelper
       version: OpenProject::VERSION.to_semver,
       db: ActiveRecord::Base.connection.adapter_name.downcase,
       lang: User.current.try(:language),
-      ee: EnterpriseToken.current.present?,
     }.merge(args.symbolize_keys)
     uri.query = info.to_query
     uri.to_s
diff --git a/app/models/queries/work_packages/columns/relation_column.rb b/app/models/queries/work_packages/columns/relation_column.rb
index 3ae476c6be..64849a5347 100644
--- a/app/models/queries/work_packages/columns/relation_column.rb
+++ b/app/models/queries/work_packages/columns/relation_column.rb
@@ -31,9 +31,4 @@
 class Queries::WorkPackages::Columns::RelationColumn < Queries::WorkPackages::Columns::WorkPackageColumn
   attr_accessor :type
 
-  def self.granted_by_enterprise_token
-    EnterpriseToken.allows_to?(:work_package_query_relation_columns)
-  end
-
-  private_class_method :granted_by_enterprise_token
 end
diff --git a/app/models/queries/work_packages/columns/relation_of_type_column.rb b/app/models/queries/work_packages/columns/relation_of_type_column.rb
index 088b4ddbfa..cb01e36847 100644
--- a/app/models/queries/work_packages/columns/relation_of_type_column.rb
+++ b/app/models/queries/work_packages/columns/relation_of_type_column.rb
@@ -50,8 +50,6 @@ class Queries::WorkPackages::Columns::RelationOfTypeColumn < Queries::WorkPackag
   end
 
   def self.instances(_context = nil)
-    return [] unless granted_by_enterprise_token
-
     Relation::TYPES.map { |_key, type| new(type) }
   end
 end
diff --git a/app/models/queries/work_packages/columns/relation_to_type_column.rb b/app/models/queries/work_packages/columns/relation_to_type_column.rb
index be0bb13582..abcd054d6f 100644
--- a/app/models/queries/work_packages/columns/relation_to_type_column.rb
+++ b/app/models/queries/work_packages/columns/relation_to_type_column.rb
@@ -46,9 +46,7 @@ class Queries::WorkPackages::Columns::RelationToTypeColumn < Queries::WorkPackag
   end
 
   def self.instances(context = nil)
-    if !granted_by_enterprise_token
-      []
-    elsif context
+    if context
       context.types
     else
       Type.all
diff --git a/app/models/queries/work_packages/filter/attachment_base_filter.rb b/app/models/queries/work_packages/filter/attachment_base_filter.rb
index c43066b865..9cc3783636 100644
--- a/app/models/queries/work_packages/filter/attachment_base_filter.rb
+++ b/app/models/queries/work_packages/filter/attachment_base_filter.rb
@@ -47,7 +47,7 @@ class Queries::WorkPackages::Filter::AttachmentBaseFilter < Queries::WorkPackage
   end
 
   def available?
-    EnterpriseToken.allows_to?(:attachment_filters) && OpenProject::Database.allows_tsv?
+    OpenProject::Database.allows_tsv?
   end
 
   def where
diff --git a/app/models/queries/work_packages/filter/search_filter.rb b/app/models/queries/work_packages/filter/search_filter.rb
index 6aabc8bc1b..de706256f6 100644
--- a/app/models/queries/work_packages/filter/search_filter.rb
+++ b/app/models/queries/work_packages/filter/search_filter.rb
@@ -119,6 +119,6 @@ class Queries::WorkPackages::Filter::SearchFilter <
   private
 
   def attachment_filters_allowed?
-    EnterpriseToken.allows_to?(:attachment_filters) && OpenProject::Database.allows_tsv?
+    OpenProject::Database.allows_tsv?
   end
 end
diff --git a/app/models/query/highlighting.rb b/app/models/query/highlighting.rb
index f26a721141..588b65f829 100644
--- a/app/models/query/highlighting.rb
+++ b/app/models/query/highlighting.rb
@@ -69,8 +69,6 @@ module Query::Highlighting
     end
 
     def highlighted_attributes
-      return [] unless EnterpriseToken.allows_to?(:conditional_highlighting)
-
       val = super
 
       if val.present?
@@ -81,8 +79,6 @@ module Query::Highlighting
     end
 
     def highlighting_mode
-      return :none unless EnterpriseToken.allows_to?(:conditional_highlighting)
-
       val = super
 
       if val.present?
diff --git a/app/models/setting.rb b/app/models/setting.rb
index 28acb81249..f886188f3b 100644
--- a/app/models/setting.rb
+++ b/app/models/setting.rb
@@ -248,11 +248,6 @@ class Setting < ApplicationRecord
 
     value = cached_or_default(name)
 
-    case name
-    when "work_package_list_default_highlighting_mode"
-      value = "none" unless EnterpriseToken.allows_to? :conditional_highlighting
-    end
-
     value
   end
 
diff --git a/app/models/status.rb b/app/models/status.rb
index 3bf8075e84..48dfeaae70 100644
--- a/app/models/status.rb
+++ b/app/models/status.rb
@@ -88,22 +88,10 @@ class Status < ApplicationRecord
   def to_s; name end
 
   def is_readonly
-    return false unless can_readonly?
-
     super
   end
   alias :is_readonly? :is_readonly
 
-  ##
-  # Overrides cache key so that changes to EE state are reflected
-  def cache_key
-    super + '/' + can_readonly?.to_s
-  end
-
-  def can_readonly?
-    EnterpriseToken.allows_to?(:readonly_work_packages)
-  end
-
   private
 
   def check_integrity
diff --git a/app/models/user.rb b/app/models/user.rb
index 7634246024..9ced0ccb38 100644
--- a/app/models/user.rb
+++ b/app/models/user.rb
@@ -283,12 +283,7 @@ class User < Principal
     new(attrs).tap do |user|
       user.language = Setting.default_language
 
-      if OpenProject::Enterprise.user_limit_reached?
-        OpenProject::Enterprise.send_activation_limit_notification_about(user) if notify
-
-        Rails.logger.error("User '#{user.login}' could not be created as user limit exceeded.")
-        user.errors.add :base, I18n.t(:error_enterprise_activation_user_limit)
-      elsif user.save
+      if user.save
         user.reload
         Rails.logger.info("User '#{user.login}' created from external auth source: #{user.auth_source&.type} - #{user.auth_source&.name}")
       else
diff --git a/app/services/authorization/enterprise_service.rb b/app/services/authorization/enterprise_service.rb
index a6915fb69d..7675b00652 100644
--- a/app/services/authorization/enterprise_service.rb
+++ b/app/services/authorization/enterprise_service.rb
@@ -52,12 +52,7 @@ class Authorization::EnterpriseService
 
   # Return a true ServiceResult if the token contains this particular action.
   def call(action)
-    allowed =
-      if token.nil? || token.token_object.nil? || token.expired?
-        false
-      else
-        process(action)
-      end
+    allowed = process(action)
 
     result(allowed)
   end
diff --git a/app/services/users/register_user_service.rb b/app/services/users/register_user_service.rb
index ac7047a077..748606259d 100644
--- a/app/services/users/register_user_service.rb
+++ b/app/services/users/register_user_service.rb
@@ -37,7 +37,6 @@ module Users
 
     def call
       %i[
-        ensure_user_limit_not_reached!
         register_invited_user
         register_ldap_user
         ensure_registration_allowed!
@@ -65,15 +64,6 @@ module Users
       end
     end
 
-    ##
-    # Ensure the user limit is not reached
-    def ensure_user_limit_not_reached!
-      if OpenProject::Enterprise.user_limit_reached?
-        OpenProject::Enterprise.send_activation_limit_notification_about user
-        ServiceResult.new(success: false, result: user, message: I18n.t(:error_enterprise_activation_user_limit))
-      end
-    end
-
     ##
     # Try to register an invited user
     # bypassing regular restrictions
diff --git a/app/views/custom_fields/_form.html.erb b/app/views/custom_fields/_form.html.erb
index 31cedbe80c..db9bc23088 100644
--- a/app/views/custom_fields/_form.html.erb
+++ b/app/views/custom_fields/_form.html.erb
@@ -62,17 +62,7 @@ See docs/COPYRIGHT.rdoc for more details.
 
   <% if @custom_field.class.name == 'WorkPackageCustomField' %>
     <div class="form--field" id="custom_field_multi_select">
-      <% if EnterpriseToken.allows_to?(:multiselect_custom_fields) %>
         <%= f.check_box :multi_value %>
-      <% else %>
-        <label class="form--label" for="custom_field_multi_value_disabled"><%= CustomField.human_attribute_name('multi_value') %></label>
-        <span class="form--field-container">
-          <span class="form--check-box-container">
-            <input disabled="disabled" class="-cf-ignore-disabled form--check-box" type="checkbox" name="custom_field_multi_value_disabled">
-            <%= render partial: 'enterprise/locked_note' %>
-          </span>
-        </span>
-      <% end %>
     </div>
   <% end %>
 
diff --git a/app/views/ldap_auth_sources/_form.html.erb b/app/views/ldap_auth_sources/_form.html.erb
index 1ed4d10bb3..ca35adea94 100644
--- a/app/views/ldap_auth_sources/_form.html.erb
+++ b/app/views/ldap_auth_sources/_form.html.erb
@@ -137,9 +137,9 @@ See docs/COPYRIGHT.rdoc for more details.
     <%= f.check_box 'onthefly_register', label: AuthSource.human_attribute_name(:onthefly) %>
     <div class="form--field-instructions">
       <p><%= t('ldap_auth_sources.attribute_texts.onthefly_register') %></p>
-      <% if EnterpriseToken.allows_to?(:ldap_groups) %>
+
         <p><%= t('ldap_auth_sources.attribute_texts.onthefly_group_sync') %></p>
-      <% end %>
+
     </div>
   </div>
 </fieldset>
diff --git a/app/views/members/_member_form.html.erb b/app/views/members/_member_form.html.erb
index d45024ff89..50a0e8c276 100644
--- a/app/views/members/_member_form.html.erb
+++ b/app/views/members/_member_form.html.erb
@@ -76,13 +76,6 @@ See docs/COPYRIGHT.rdoc for more details.
         </div>
       </div>
     </div>
-    <% if OpenProject::Enterprise.user_limit_reached? %>
-        <div class="notification-box -warning icon-warning" id="member-user-limit-warning" style="display: none;">
-          <div class="notification-box--content">
-            <p><%= I18n.t(:warning_user_limit_reached, upgrade_url: OpenProject::Enterprise.upgrade_path).html_safe %></p>
-          </div>
-        </div>
-    <% end %>
 <% end %>
 
 
diff --git a/app/views/projects/filters/_form.html.erb b/app/views/projects/filters/_form.html.erb
index 92210700ef..a455ae4016 100644
--- a/app/views/projects/filters/_form.html.erb
+++ b/app/views/projects/filters/_form.html.erb
@@ -83,11 +83,5 @@
         <%= submit_tag t('button_apply'), class: 'button -small -highlight', name: nil %>
       </li>
     </ul>
-    <% unless EnterpriseToken.allows_to?(:custom_fields_in_projects_list)%>
-      <enterprise-banner-bootstrap
-        text-message="<%= t('ee.upsale.project_filters.description_html') %>"
-        referrer="project-list-filter">
-      </enterprise-banner-bootstrap>
-    <% end %>
   </fieldset>
 <% end %>
diff --git a/app/views/statuses/_form.html.erb b/app/views/statuses/_form.html.erb
index 39a0c72d0b..e83a7264b6 100644
--- a/app/views/statuses/_form.html.erb
+++ b/app/views/statuses/_form.html.erb
@@ -43,13 +43,11 @@ See docs/COPYRIGHT.rdoc for more details.
   <% end %>
 
   <div class="form--field">
-    <% disabled = !EnterpriseToken.allows_to?(:readonly_work_packages)  %>
-    <%= f.check_box :is_readonly, disabled: disabled %>
+
+    <%= f.check_box :is_readonly %>
     <div class="form--field-instructions">
       <p><%= t('statuses.edit.status_readonly_html') %></p>
-      <% if disabled %>
-        <p><%= render(partial: 'enterprise/locked_note') %></p>
-      <% end  %>
+
     </div>
   </div>
 
diff --git a/app/views/types/form/_form_configuration.html.erb b/app/views/types/form/_form_configuration.html.erb
index a757de0889..510f2e3223 100644
--- a/app/views/types/form/_form_configuration.html.erb
+++ b/app/views/types/form/_form_configuration.html.erb
@@ -41,37 +41,7 @@ See docs/COPYRIGHT.rdoc for more details.
           </div>
         </div>
 
-        <% if EnterpriseToken.show_banners? %>
-          <div class="notification-box upsale-notification">
-            <div class="notification-box--content">
-              <h3><%= t('admin.enterprise.upgrade_to_ee') %></h3>
-              <%= image_tag "enterprise_edition.png", class: "widget-box--teaser-image" %>
 
-              <p><%= t('ee.upsale.form_configuration.description') %></p>
-
-              <ul class="">
-                <li>
-                  <%= t('ee.upsale.form_configuration.add_groups') %>
-                </li>
-                <li>
-                  <%= t('ee.upsale.form_configuration.rename_groups') %>
-                </li>
-              </ul>
-              <p>
-                <br/>
-                <b><%= t('js.admin.enterprise.upsale.become_hero') %></b> <%= t('js.admin.enterprise.upsale.you_contribute') %>
-              </p>
-              <%= link_to("#{OpenProject::Static::Links.links[:upsale][:href]}/?utm_source=unknown&utm_medium=community-edition&utm_campaign=form-configuration",
-                          { class: 'button -alt-highlight',
-                            aria: { label: t('admin.enterprise.order') },
-                            target: '_blank',
-                            title: t('admin.enterprise.order') }) do %>
-                <%= op_icon('button--icon icon-add') %>
-                <span class="button--text"><%= t('admin.enterprise.order') %></span>
-              <% end %>
-            </div>
-          </div>
-        <% end %>
         <% no_filter_query = ::API::V3::Queries::QueryParamsRepresenter.new(Query.new_default.tap { |q| q.filters = [] }).to_json %>
         <%= f.hidden_field :attribute_groups, value: '', class: 'admin-type-form--hidden-field'  %>
         <%= content_tag('admin-type-form-configuration',
diff --git a/app/views/users/index.html.erb b/app/views/users/index.html.erb
index 5ab011c21f..454c98a252 100644
--- a/app/views/users/index.html.erb
+++ b/app/views/users/index.html.erb
@@ -27,20 +27,8 @@ See docs/COPYRIGHT.rdoc for more details.
 
 ++#%>
 <% html_title t(:label_administration), t(:label_user_plural) -%>
-<%
-  user_limit = begin
-    token = OpenProject::Enterprise.token
-    limit = token && Hash(token.restrictions)[:active_user_count]
-
-    limit if limit && limit > 0
-  end
-%>
-<% users_info = user_limit && content_tag(:div) do %>
-  <%= t(:label_enterprise_active_users, current: OpenProject::Enterprise.active_user_count, limit: user_limit) %>
-  &nbsp;
-  <a href="<%= OpenProject::Enterprise.upgrade_path %>" class="display-inline button -tiny -highlight" title="<%= t(:title_enterprise_upgrade) %>"><%= t(:button_upgrade) %></a>
-<% end %>
-<%= toolbar title: t(:label_user_plural), title_class: 'no-padding-bottom', subtitle: users_info do %>
+
+<%= toolbar title: t(:label_user_plural), title_class: 'no-padding-bottom' do %>
   <li class="toolbar-item">
     <%= link_to new_user_path,
         { class: 'button -alt-highlight',
diff --git a/app/views/work_packages/settings/work_package_tracking.html.erb b/app/views/work_packages/settings/work_package_tracking.html.erb
index af3c7b1f46..18fb6f14e4 100644
--- a/app/views/work_packages/settings/work_package_tracking.html.erb
+++ b/app/views/work_packages/settings/work_package_tracking.html.erb
@@ -46,20 +46,12 @@ See docs/COPYRIGHT.rdoc for more details.
                          },
                          Hash.new.tap { |options|
                             options[:container_class] = '-middle'
-                            options[:disabled] = 'disabled' unless EnterpriseToken.allows_to?(:conditional_highlighting)
+                            
                          }
       %>
-      <%= render partial: 'work_packages/settings/enterprise_feature_hint',
-                 locals: {
-                   ee_feature: :conditional_highlighting,
-                   explanation: t('js.work_packages.table_configuration.upsale.attribute_highlighting'),
-                   link_out: {
-                     href: "https://www.openproject.org/enterprise-edition/?op_edtion=community-edition&op_referrer=settings-wp-attribute-highlighting#attribute-highlighting",
-                     caption: t('js.work_packages.table_configuration.upsale.check_out_link')
-                   }
-                 } %>
+
     </div>
-    <% if EnterpriseToken.allows_to? :conditional_highlighting %>
+
       <div class="form--field -indented -vertical settings--highlighted-attributes" style="<%= 'display: none' unless Setting[:work_package_list_default_highlighting_mode] == 'inline' %>">
         <%= setting_multiselect :work_package_list_default_highlighted_attributes,
                               Query.available_columns(nil).select(&:highlightable).map { |column|
@@ -67,7 +59,7 @@ See docs/COPYRIGHT.rdoc for more details.
                               }
         %>
       </div>
-    <% end %>
+
   </section>
   <fieldset class="form--fieldset"><legend class="form--fieldset-legend"><%= t(:setting_column_options) %></legend>
     <%
diff --git a/lib/open_project/configuration.rb b/lib/open_project/configuration.rb
index ed240d13f8..fcb63da256 100644
--- a/lib/open_project/configuration.rb
+++ b/lib/open_project/configuration.rb
@@ -120,7 +120,7 @@ module OpenProject
 
       'youtube_channel' => 'https://www.youtube.com/c/OpenProjectCommunity',
 
-      'ee_manager_visible' => true,
+      'ee_manager_visible' => false,
 
       # Health check configuration
       'health_checks_authentication_password' => nil,
@@ -174,10 +174,10 @@ module OpenProject
       'sentry_dsn' => nil,
       # Allow separate error reporting for frontend errors
       'sentry_frontend_dsn' => nil,
-      'sentry_host' => 'https://sentry.openproject.com',
+      'sentry_host' => 'https://sentry.com',
 
       # Allow connection to Augur
-      'enterprise_trial_creation_host' => 'https://augur.openproject.com',
+      'enterprise_trial_creation_host' => '',
 
       # Allow override of LDAP options
       'ldap_auth_source_tls_options' => nil,
diff --git a/lib/open_project/configuration/helpers.rb b/lib/open_project/configuration/helpers.rb
index ebb3ffdbda..fdad4058f1 100644
--- a/lib/open_project/configuration/helpers.rb
+++ b/lib/open_project/configuration/helpers.rb
@@ -55,15 +55,6 @@ module OpenProject
         direct_uploads
       end
 
-      # Augur connect host
-      def enterprise_trial_creation_host
-        if Rails.env.production?
-          self['enterprise_trial_creation_host']
-        else
-          'https://augur.openproject-edge.com'
-        end
-      end
-
       def file_storage?
         attachments_storage == :file
       end
diff --git a/lib/plugins/acts_as_searchable/lib/acts_as_searchable.rb b/lib/plugins/acts_as_searchable/lib/acts_as_searchable.rb
index 9d0099d912..a69945948b 100644
--- a/lib/plugins/acts_as_searchable/lib/acts_as_searchable.rb
+++ b/lib/plugins/acts_as_searchable/lib/acts_as_searchable.rb
@@ -91,7 +91,7 @@ module Redmine
 
             token_clauses = columns.map { |column| "(LOWER(#{column}) LIKE ?)" }
 
-            if EnterpriseToken.allows_to?(:attachment_filters) && OpenProject::Database.allows_tsv?
+            if OpenProject::Database.allows_tsv?
               tsv_clauses = tsv_columns.map do |tsv_column|
                 OpenProject::FullTextSearch.tsv_where(tsv_column[:table_name],
                                                       tsv_column[:column_name],
diff --git a/lib/redmine/menu_manager/top_menu/help_menu.rb b/lib/redmine/menu_manager/top_menu/help_menu.rb
index a306b95675..27a8f25bcc 100644
--- a/lib/redmine/menu_manager/top_menu/help_menu.rb
+++ b/lib/redmine/menu_manager/top_menu/help_menu.rb
@@ -87,9 +87,7 @@ module Redmine::MenuManager::TopMenu::HelpMenu
                   class: 'drop-down--help-headline',
                   title: I18n.t('top_menu.help_and_support')
     end
-    if EnterpriseToken.show_banners?
-      result << static_link_item(:upsale, href_suffix: "/?utm_source=unknown&utm_medium=op-instance&utm_campaign=ee-upsale-help-menu")
-    end
+
     result << static_link_item(:user_guides)
     result << content_tag(:li) {
       link_to I18n.t('label_videos'),
diff --git a/modules/auth_plugins/lib/open_project/plugins/auth_plugin.rb b/modules/auth_plugins/lib/open_project/plugins/auth_plugin.rb
index 5097d9bd30..5628530019 100644
--- a/modules/auth_plugins/lib/open_project/plugins/auth_plugin.rb
+++ b/modules/auth_plugins/lib/open_project/plugins/auth_plugin.rb
@@ -71,11 +71,7 @@ module OpenProject::Plugins
     def self.filtered_strategies(options)
       options.select do |provider|
         name = provider[:name]&.to_s
-        next true if !EnterpriseToken.show_banners? || name == 'developer'
-
-        warn_unavailable(name)
-
-        false
+        next true 
       end
     end
 
@@ -92,13 +88,6 @@ module OpenProject::Plugins
 
       [camelization, name].compact.first.underscore.to_sym
     end
-
-    def self.warn_unavailable(name)
-      RequestStore.fetch("warn_unavailable_auth_#{name}") do
-        Rails.logger.warn { "OmniAuth SSO strategy #{name} is only available for Enterprise Editions." }
-        true
-      end
-    end
   end
 
   class ProviderBuilder
diff --git a/modules/grids/lib/grids/configuration/in_project_base_registration.rb b/modules/grids/lib/grids/configuration/in_project_base_registration.rb
index 4ed219b0b2..f3e4a3d0d8 100644
--- a/modules/grids/lib/grids/configuration/in_project_base_registration.rb
+++ b/modules/grids/lib/grids/configuration/in_project_base_registration.rb
@@ -24,8 +24,7 @@ module Grids::Configuration
     }
 
     queries_permission_and_ee_lambda = ->(user, project) {
-      save_or_manage_queries_lambda.call(user, project) &&
-        EnterpriseToken.allows_to?(:grid_widget_wp_graph)
+      save_or_manage_queries_lambda.call(user, project) 
     }
 
     view_work_packages_lambda = ->(user, project) {
diff --git a/modules/ldap_groups/app/controllers/ldap_groups/synchronized_filters_controller.rb b/modules/ldap_groups/app/controllers/ldap_groups/synchronized_filters_controller.rb
index 0ff761842a..3481ef410f 100644
--- a/modules/ldap_groups/app/controllers/ldap_groups/synchronized_filters_controller.rb
+++ b/modules/ldap_groups/app/controllers/ldap_groups/synchronized_filters_controller.rb
@@ -1,7 +1,6 @@
 module LdapGroups
   class SynchronizedFiltersController < ::ApplicationController
     before_action :require_admin
-    before_action :check_ee
     before_action :find_filter, except: %i[new create]
 
     layout 'admin'
@@ -65,13 +64,6 @@ module LdapGroups
       render_404
     end
 
-    def check_ee
-      unless EnterpriseToken.allows_to?(:ldap_groups)
-        render template: 'ldap_groups/synchronized_groups/upsale'
-        return false
-      end
-    end
-
     def permitted_params
       params
         .require(:synchronized_filter)
diff --git a/modules/ldap_groups/app/controllers/ldap_groups/synchronized_groups_controller.rb b/modules/ldap_groups/app/controllers/ldap_groups/synchronized_groups_controller.rb
index 1a13a31eb8..ffe63abc23 100644
--- a/modules/ldap_groups/app/controllers/ldap_groups/synchronized_groups_controller.rb
+++ b/modules/ldap_groups/app/controllers/ldap_groups/synchronized_groups_controller.rb
@@ -1,7 +1,6 @@
 module LdapGroups
   class SynchronizedGroupsController < ::ApplicationController
     before_action :require_admin
-    before_action :check_ee
     before_action :find_group, only: %i(show destroy_info destroy)
 
     layout 'admin'
@@ -56,13 +55,6 @@ module LdapGroups
       render_404
     end
 
-    def check_ee
-      unless EnterpriseToken.allows_to?(:ldap_groups)
-        render template: 'ldap_groups/synchronized_groups/upsale'
-        return false
-      end
-    end
-
     def permitted_params
       params
         .require(:synchronized_group)
diff --git a/modules/ldap_groups/app/workers/ldap_groups/synchronization_job.rb b/modules/ldap_groups/app/workers/ldap_groups/synchronization_job.rb
index cda0d81a45..e5e30c497c 100644
--- a/modules/ldap_groups/app/workers/ldap_groups/synchronization_job.rb
+++ b/modules/ldap_groups/app/workers/ldap_groups/synchronization_job.rb
@@ -34,7 +34,6 @@ module LdapGroups
     self.cron_expression = '*/30 * * * *'
 
     def perform
-      return unless EnterpriseToken.allows_to?(:ldap_groups)
 
       User.system.run_given do
         synchronize!
diff --git a/modules/openid_connect/app/controllers/openid_connect/providers_controller.rb b/modules/openid_connect/app/controllers/openid_connect/providers_controller.rb
index 9fadc28776..59d43c191b 100644
--- a/modules/openid_connect/app/controllers/openid_connect/providers_controller.rb
+++ b/modules/openid_connect/app/controllers/openid_connect/providers_controller.rb
@@ -4,7 +4,6 @@ module OpenIDConnect
     menu_item :plugin_openid_connect
 
     before_action :require_admin
-    before_action :check_ee
     before_action :find_provider, only: [:edit, :update, :destroy]
 
     def index; end
@@ -54,13 +53,6 @@ module OpenIDConnect
 
     private
 
-    def check_ee
-      if EnterpriseToken.show_banners?
-        render template: '/openid_connect/providers/upsale'
-        return false
-      end
-    end
-
     def create_params
       params.require(:openid_connect_provider).permit(:name, :display_name, :identifier, :secret)
     end
diff --git a/modules/two_factor_authentication/app/controllers/two_factor_authentication/two_factor_settings_controller.rb b/modules/two_factor_authentication/app/controllers/two_factor_authentication/two_factor_settings_controller.rb
index 32c7ae8246..81faeea598 100644
--- a/modules/two_factor_authentication/app/controllers/two_factor_authentication/two_factor_settings_controller.rb
+++ b/modules/two_factor_authentication/app/controllers/two_factor_authentication/two_factor_settings_controller.rb
@@ -3,7 +3,6 @@ module ::TwoFactorAuthentication
 
     before_action :require_admin
     before_action :check_enabled
-    before_action :check_ee
 
     layout 'admin'
     menu_item :two_factor_authentication
@@ -49,12 +48,6 @@ module ::TwoFactorAuthentication
       render_403 unless manager.configurable_by_ui?
     end
 
-    def check_ee
-      unless EnterpriseToken.allows_to?(:two_factor_authentication)
-        render template: 'two_factor_authentication/upsale'
-      end
-    end
-
     def manager
       ::OpenProject::TwoFactorAuthentication::TokenStrategyManager
     end
diff --git a/modules/two_factor_authentication/lib/open_project/two_factor_authentication/token_strategy_manager.rb b/modules/two_factor_authentication/lib/open_project/two_factor_authentication/token_strategy_manager.rb
index bf3034a031..25df57e00b 100644
--- a/modules/two_factor_authentication/lib/open_project/two_factor_authentication/token_strategy_manager.rb
+++ b/modules/two_factor_authentication/lib/open_project/two_factor_authentication/token_strategy_manager.rb
@@ -39,7 +39,7 @@ module OpenProject::TwoFactorAuthentication
       ##
       # Whether any active strategy exists
       def enabled?
-        !active_strategies.empty? && EnterpriseToken.allows_to?(:two_factor_authentication)
+        !active_strategies.empty?
       end
 
       ##
